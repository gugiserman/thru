{"version":3,"sources":["../node_modules/domready/ready.js","components/Game.js","components/World.js","../node_modules/unique-colors/unique-colors.js","components/Obstacle.js","components/Player.js","components/index.js","index.js"],"names":["Game","container","canvas","getContext","world","World","obstacle","Obstacle","player","Player","setup","then","resize","bind","render","Promise","resolve","window","imageSmoothingEnabled","screen","orientation","lock","catch","silently","innerWidth","innerHeight","width","height","addEventListener","clearRect","requestAnimationFrame","tileSize","columns","rows","Math","floor","x1","y1","x2","y2","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","i","fromX","toX","toY","drawLine","fromY","x","y","rate","fill","getRandomFill","missingX","getRandomMissingX","random","fillStyle","rect","size","getStartingX","getStartingY","init","document","getElementById"],"mappings":"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","file":"src.fde03701.map","sourceRoot":"../src","sourcesContent":["/*!\n  * domready (c) Dustin Diaz 2014 - License MIT\n  */\n!function (name, definition) {\n\n  if (typeof module != 'undefined') module.exports = definition()\n  else if (typeof define == 'function' && typeof define.amd == 'object') define(definition)\n  else this[name] = definition()\n\n}('domready', function () {\n\n  var fns = [], listener\n    , doc = document\n    , hack = doc.documentElement.doScroll\n    , domContentLoaded = 'DOMContentLoaded'\n    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState)\n\n\n  if (!loaded)\n  doc.addEventListener(domContentLoaded, listener = function () {\n    doc.removeEventListener(domContentLoaded, listener)\n    loaded = 1\n    while (listener = fns.shift()) listener()\n  })\n\n  return function (fn) {\n    loaded ? setTimeout(fn, 0) : fns.push(fn)\n  }\n\n});\n","import { World, Player, Obstacle } from './'\n\nclass Game {\n  constructor(container) {\n    this.container = container\n    this.canvas = container.getContext('2d')\n\n    this.world = new World(this.container, this.canvas)\n    this.obstacle = new Obstacle(this.container, this.canvas, this.world)\n    this.player = new Player(this.container, this.canvas, this.world)\n\n    this.setup().then(() => {\n      this.resize(true)\n      this.bind()\n      this.render()\n    })\n  }\n\n  setup() {\n    return new Promise(resolve => {\n      this.canvas.imageSmoothingEnabled = false\n\n      if (window.screen && window.screen.orientation && window.screen.orientation.lock) {\n        return window.screen.orientation.lock('portrait')\n          .then(resolve)\n          .catch(resolve)\n      }\n    })\n  }\n\n  resize(silently = false) {\n    if (window.innerWidth > window.innerHeight) {\n      this.container.width = 960\n      this.container.height = 600\n    } else {\n      this.container.width = 600\n      this.container.height = 960\n    }\n\n    this.world.resize()\n    this.obstacle.resize()\n    this.player.resize()\n\n    if (!silently) {\n      return this.render()\n    }\n  }\n\n  bind() {\n    window.addEventListener('resize', () => this.resize())\n  }\n\n  render() {\n    this.canvas.clearRect(0, 0, this.container.width, this.container.height)\n\n    this.world.render()\n    this.obstacle.render()\n    this.player.render()\n\n    window.requestAnimationFrame(this.render.bind(this))\n  }\n}\n\nexport default Game\n","class World {\n  constructor(container, canvas) {\n    this.container = container\n    this.canvas = canvas\n\n    this.tileSize = 0\n    this.columns = 0\n    this.rows = 0\n\n    this.resize()\n  }\n\n  resize() {\n    if (this.container.width && this.container.height) {\n      this.tileSize = 24\n      this.columns = Math.floor(this.container.width / this.tileSize)\n      this.rows = Math.floor(this.container.height / this.tileSize) - 1\n    }\n  }\n\n  drawLine(x1, y1, x2, y2) {\n    this.canvas.beginPath()\n    this.canvas.strokeStyle = '#fafafa'\n    this.canvas.lineWidth = 1\n    this.canvas.moveTo(x1, y1)\n    this.canvas.lineTo(x2, y2)\n    this.canvas.stroke()\n  }\n\n  render() {\n    for (let i = 0; i < (this.columns + 1); i++) {\n      const fromX = (i * this.tileSize)\n      const fromY = 0\n\n      const toX = fromX\n      const toY = this.container.height\n\n      this.drawLine(fromX, fromY, toX, toY)\n    }\n\n    for (let i = 0; i < (this.rows + 1); i++) {\n      const fromX = 0\n      const fromY = (i * this.tileSize)\n\n      const toX = this.container.width\n      const toY = fromY\n\n      this.drawLine(fromX, fromY, toX, toY)\n    }\n  }\n}\n\nexport default World\n","\n/**\n * expose module\n *\n */\n\nvar exports;\n\nif( typeof module !== 'undefined' && module.exports ) {\n  exports = module.exports;\n} else {\n  exports = window;\n}\n\n/**\n * unique_colors\n *\n */\n\n(function (global) {\n  var colors = [\n    '#ff0066',\n    '#ffcc00',\n    '#3d9df2',\n    '#e673cf',\n    '#8800cc',\n    '#005fb3',\n    '#a69d7c',\n    '#8c3f23',\n    '#397358',\n    '#594358',\n    '#30403d',\n    '#0d2b33',\n    '#ffbffb',\n    '#ffd580',\n    '#00e2f2',\n    '#9173e6',\n    '#a099cc',\n    '#5995b3',\n    '#994d6b',\n    '#2d2080',\n    '#736039',\n    '#0c0059',\n    '#00401a',\n    '#1a3320',\n    '#f240ff',\n    '#ff8800',\n    '#00f2c2',\n    '#e59173',\n    '#3347cc',\n    '#18b300',\n    '#269954',\n    '#205380',\n    '#733d00',\n    '#161f59',\n    '#364010',\n    '#332b1a',\n    '#0000ff',\n    '#ffc8bf',\n    '#79f299',\n    '#0000d9',\n    '#99cca7',\n    '#b29559',\n    '#8c004b',\n    '#7f7700',\n    '#730000',\n    '#305900',\n    '#402200',\n    '#331a1a',\n    '#bfe1ff',\n    '#ff0000',\n    '#baf279',\n    '#a3d5d9',\n    '#cc8533',\n    '#b38686',\n    '#59468c',\n    '#7f4840',\n    '#66001b',\n    '#134d49',\n    '#401100',\n    '#40bfff',\n    '#ff8080',\n    '#def2b6',\n    '#d94c36',\n    '#cc5200',\n    '#a67c98',\n    '#23858c',\n    '#6d1d73',\n    '#005266',\n    '#4d3e39',\n    '#330014',\n    '#73ff40',\n    '#f2b6c6',\n    '#f2d6b6',\n    '#cc3347',\n    '#0000bf',\n    '#29a68d',\n    '#8c6246',\n    '#565a73',\n    '#57664d',\n    '#400033',\n    '#331a31',\n    '#ccff00',\n    '#f279aa',\n    '#f20000',\n    '#cc0088',\n    '#b2bf00',\n    '#95a653',\n    '#8c7769',\n    '#566973',\n    '#592d39',\n    '#002240',\n    '#070033'\n  ];\n\n  global.unique_colors = function (n) {\n    if (n > 92) {\n      throw new Error('n <= 92');\n    }\n\n    return colors.slice(0, n);\n  };\n\n  global.unique_shuffled_colors = function (n) {\n    if (n > 92) {\n      throw new Error('n <= 92');\n    }\n\n    var i;\n    var shuffle = [];\n    var result = [];\n    for (i = 0; i < n; i += 1) {\n      shuffle.push([Math.floor(Math.random() * n), i]);\n    }\n\n    shuffle.sort(function (a,b) {\n      return  a[0] - b[0];\n    });\n\n    for (i = 0; i < n; i += 1) {\n      result.push(colors[shuffle[i][1]]);\n    }\n\n    return result;\n  };\n })(exports);\n","import { unique_shuffled_colors } from 'unique-colors'\n\nclass Obstacle {\n  constructor(container, canvas, world) {\n    this.container = container\n    this.canvas = canvas\n    this.world = world\n\n    this.x = 0\n    this.y = 0\n    this.rate = 0.08\n    this.fill = this.getRandomFill()\n    this.missingX = this.getRandomMissingX()\n  }\n\n  getRandomFill() {\n  }\n\n  getRandomMissingX() {\n    if (!this.world.columns) {\n      return -1\n    }\n\n    return Math.floor(Math.random() * this.world.columns)\n  }\n\n  resize() {\n    if (this.missingX < 0) {\n      this.missingX = this.getRandomMissingX()\n    }\n  }\n\n  render() {\n    const { columns, tileSize } = this.world\n\n    for (let i = 0; i < this.world.columns; i++) {\n      if (i === this.missingX) {\n        continue\n      }\n\n      const x = (i * tileSize)\n      const y = (this.y * tileSize)\n\n      this.canvas.beginPath()\n      this.canvas.fillStyle = '#ddd'\n      this.canvas.strokeStyle = '#fafafa'\n      this.canvas.rect(x, y, tileSize, tileSize)\n      this.canvas.fill()\n      this.canvas.stroke()\n    }\n\n    if ((this.world.columns > 0) && (this.y < this.world.rows)) {\n      this.y += this.rate\n    }\n  }\n}\n\nexport default Obstacle\n","class Player {\n  constructor(container, canvas, world) {\n    this.container = container\n    this.canvas = canvas\n    this.world = world\n\n    this.size = -1\n    this.x = this.getStartingX()\n    this.y = this.getStartingY()\n\n    this.resize()\n  }\n\n  resize() {\n    if ((this.size < 0) && this.world.tileSize) {\n      this.size = this.world.tileSize\n    }\n\n    if ((this.x < 0 || this.y < 0)) {\n      this.x = this.getStartingX()\n      this.y = this.getStartingY()\n    }\n  }\n\n  getStartingX() {\n    if (!this.world.columns) {\n      return -1\n    }\n\n    return Math.floor(this.world.columns / 2)\n  }\n\n  getStartingY() {\n    if (!this.world.rows) {\n      return -1\n    }\n\n    return Math.floor(this.world.rows / 1.5)\n  }\n\n  render() {\n    this.canvas.beginPath()\n    this.canvas.fillStyle = '#000000'\n    this.canvas.strokeStyle = '#fafafa'\n    this.canvas.rect((this.x * this.size), (this.y * this.size), this.size, this.size)\n    this.canvas.fill()\n    this.canvas.stroke()\n  }\n}\n\nexport default Player\n","export { default as Game } from './Game'\nexport { default as World } from './World'\nexport { default as Obstacle } from './Obstacle'\nexport { default as Player } from './Player'\n","import 'normalize.css'\nimport domready from 'domready'\nimport { Game } from './components'\n\nconst init = () => {\n  return new Game(document.getElementById('thru'))\n}\n\ndomready(init)\n"]}