{"version":3,"sources":["../node_modules/domready/ready.js","components/Game.js","components/World.js","../node_modules/unique-colors/unique-colors.js","components/Obstacle.js","components/Player.js","components/index.js","index.js"],"names":["Game","container","canvas","getContext","world","World","obstacles","Obstacle","handleObstacleFinished","bind","player","Player","score","setup","then","resize","render","Promise","resolve","window","imageSmoothingEnabled","screen","orientation","lock","catch","silently","innerWidth","innerHeight","width","height","forEach","obstacle","event","touches","targetX","pageX","centerX","pageY","Math","floor","moveLeft","moveRight","addEventListener","handleTouch","finishedObstacles","filter","finished","finishedObstaclesIndexes","map","index","length","includes","push","some","y","missingX","complete","spawnObstacle","x","paint","fill","clearRect","checkCollision","requestAnimationFrame","tileSize","columns","rows","x1","y1","x2","y2","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","i","fromX","toX","toY","drawLine","fromY","onFinish","rate","getRandomFill","getRandomMissingX","interval","random","clearInterval","finish","setInterval","fall","fillStyle","rect","loop","size","getStartingX","getStartingY","color","init","document","getElementById"],"mappings":"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","file":"src.fb7e5b86.map","sourceRoot":"../src","sourcesContent":["/*!\n  * domready (c) Dustin Diaz 2014 - License MIT\n  */\n!function (name, definition) {\n\n  if (typeof module != 'undefined') module.exports = definition()\n  else if (typeof define == 'function' && typeof define.amd == 'object') define(definition)\n  else this[name] = definition()\n\n}('domready', function () {\n\n  var fns = [], listener\n    , doc = document\n    , hack = doc.documentElement.doScroll\n    , domContentLoaded = 'DOMContentLoaded'\n    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState)\n\n\n  if (!loaded)\n  doc.addEventListener(domContentLoaded, listener = function () {\n    doc.removeEventListener(domContentLoaded, listener)\n    loaded = 1\n    while (listener = fns.shift()) listener()\n  })\n\n  return function (fn) {\n    loaded ? setTimeout(fn, 0) : fns.push(fn)\n  }\n\n});\n","import { World, Player, Obstacle } from './'\n\nclass Game {\n  constructor(container) {\n    this.container = container\n    this.canvas = container.getContext('2d')\n\n    this.world = new World(this.container, this.canvas)\n    this.obstacles = [new Obstacle(this.container, this.canvas, this.world, 0, this.handleObstacleFinished.bind(this))]\n    this.player = new Player(this.container, this.canvas, this.world)\n\n    this.score = 0\n\n    this.setup().then(() => {\n      this.resize(true)\n      this.bind()\n      this.render()\n    })\n  }\n\n  setup() {\n    return new Promise(resolve => {\n      this.canvas.imageSmoothingEnabled = false\n\n      if (window.screen && window.screen.orientation && window.screen.orientation.lock) {\n        return window.screen.orientation.lock('portrait')\n          .then(resolve)\n          .catch(resolve)\n      }\n    })\n  }\n\n  resize(silently = false) {\n    if (window.innerWidth > window.innerHeight) {\n      this.container.width = 960\n      this.container.height = 600\n    } else {\n      this.container.width = 600\n      this.container.height = 960\n    }\n\n    this.world.resize()\n    this.player.resize()\n    this.obstacles.forEach(obstacle => obstacle.resize())\n\n    if (!silently) {\n      return this.render()\n    }\n  }\n\n  handleTouch(event) {\n    const { pageX: targetX, pageY: targetY } = (event.touches[0] || {})\n\n    const centerX = Math.floor(this.container.width / 2)\n    const centerY = Math.floor(this.container.height / 2)\n\n    if (targetX < centerX) {\n      this.player.moveLeft()\n    } else {\n      this.player.moveRight()\n    }\n  }\n\n  bind() {\n    window.addEventListener('resize', () => this.resize())\n    this.container.addEventListener('touchstart', this.handleTouch.bind(this))\n  }\n\n  handleObstacleFinished() {\n    const finishedObstacles = this.obstacles.filter(obstacle => obstacle.finished)\n    const finishedObstaclesIndexes = finishedObstacles.map(obstacle => obstacle.index)\n\n    if (finishedObstacles.length > 4) {\n      this.score++\n      this.obstacles = this.obstacles.filter(obstacle => !finishedObstaclesIndexes.includes(obstacle.index))\n    }\n  }\n\n  spawnObstacle() {\n    this.obstacles.push(\n      new Obstacle(this.container, this.canvas, this.world, this.obstacles.length, this.handleObstacleFinished.bind(this))\n    )\n  }\n\n  checkCollision() {\n    return this.obstacles.some(obstacle => {\n      if (obstacle.y > this.player.y && (obstacle.missingX >= 0)) {\n        obstacle.complete()\n        this.spawnObstacle()\n      }\n\n      if (obstacle.y === this.player.y) {\n        if (obstacle.missingX !== this.player.x) {\n          return true\n        } else {\n          this.player.paint(obstacle.fill)\n          return false\n        }\n      } else {\n        this.player.paint()\n        return false\n      }\n    })\n  }\n\n  render() {\n    this.canvas.clearRect(0, 0, this.container.width, this.container.height)\n\n    this.world.render()\n    this.player.render()\n    this.obstacles.forEach(obstacle => obstacle.render())\n\n    if (this.checkCollision()) {\n      return false\n    }\n\n    window.requestAnimationFrame(this.render.bind(this))\n  }\n}\n\nexport default Game\n","class World {\n  constructor(container, canvas) {\n    this.container = container\n    this.canvas = canvas\n\n    this.tileSize = 0\n    this.columns = 0\n    this.rows = 0\n\n    this.resize()\n  }\n\n  resize() {\n    if (this.container.width && this.container.height) {\n      this.tileSize = 24\n      this.columns = Math.floor(this.container.width / this.tileSize)\n      this.rows = Math.floor(this.container.height / this.tileSize) - 1\n    }\n  }\n\n  drawLine(x1, y1, x2, y2) {\n    this.canvas.beginPath()\n    this.canvas.strokeStyle = '#fafafa'\n    this.canvas.lineWidth = 1\n    this.canvas.moveTo(x1, y1)\n    this.canvas.lineTo(x2, y2)\n    this.canvas.stroke()\n  }\n\n  render() {\n    for (let i = 0; i < (this.columns + 1); i++) {\n      const fromX = (i * this.tileSize)\n      const fromY = 0\n\n      const toX = fromX\n      const toY = this.container.height\n\n      this.drawLine(fromX, fromY, toX, toY)\n    }\n\n    for (let i = 0; i < (this.rows + 1); i++) {\n      const fromX = 0\n      const fromY = (i * this.tileSize)\n\n      const toX = this.container.width\n      const toY = fromY\n\n      this.drawLine(fromX, fromY, toX, toY)\n    }\n  }\n}\n\nexport default World\n","\n/**\n * expose module\n *\n */\n\nvar exports;\n\nif( typeof module !== 'undefined' && module.exports ) {\n  exports = module.exports;\n} else {\n  exports = window;\n}\n\n/**\n * unique_colors\n *\n */\n\n(function (global) {\n  var colors = [\n    '#ff0066',\n    '#ffcc00',\n    '#3d9df2',\n    '#e673cf',\n    '#8800cc',\n    '#005fb3',\n    '#a69d7c',\n    '#8c3f23',\n    '#397358',\n    '#594358',\n    '#30403d',\n    '#0d2b33',\n    '#ffbffb',\n    '#ffd580',\n    '#00e2f2',\n    '#9173e6',\n    '#a099cc',\n    '#5995b3',\n    '#994d6b',\n    '#2d2080',\n    '#736039',\n    '#0c0059',\n    '#00401a',\n    '#1a3320',\n    '#f240ff',\n    '#ff8800',\n    '#00f2c2',\n    '#e59173',\n    '#3347cc',\n    '#18b300',\n    '#269954',\n    '#205380',\n    '#733d00',\n    '#161f59',\n    '#364010',\n    '#332b1a',\n    '#0000ff',\n    '#ffc8bf',\n    '#79f299',\n    '#0000d9',\n    '#99cca7',\n    '#b29559',\n    '#8c004b',\n    '#7f7700',\n    '#730000',\n    '#305900',\n    '#402200',\n    '#331a1a',\n    '#bfe1ff',\n    '#ff0000',\n    '#baf279',\n    '#a3d5d9',\n    '#cc8533',\n    '#b38686',\n    '#59468c',\n    '#7f4840',\n    '#66001b',\n    '#134d49',\n    '#401100',\n    '#40bfff',\n    '#ff8080',\n    '#def2b6',\n    '#d94c36',\n    '#cc5200',\n    '#a67c98',\n    '#23858c',\n    '#6d1d73',\n    '#005266',\n    '#4d3e39',\n    '#330014',\n    '#73ff40',\n    '#f2b6c6',\n    '#f2d6b6',\n    '#cc3347',\n    '#0000bf',\n    '#29a68d',\n    '#8c6246',\n    '#565a73',\n    '#57664d',\n    '#400033',\n    '#331a31',\n    '#ccff00',\n    '#f279aa',\n    '#f20000',\n    '#cc0088',\n    '#b2bf00',\n    '#95a653',\n    '#8c7769',\n    '#566973',\n    '#592d39',\n    '#002240',\n    '#070033'\n  ];\n\n  global.unique_colors = function (n) {\n    if (n > 92) {\n      throw new Error('n <= 92');\n    }\n\n    return colors.slice(0, n);\n  };\n\n  global.unique_shuffled_colors = function (n) {\n    if (n > 92) {\n      throw new Error('n <= 92');\n    }\n\n    var i;\n    var shuffle = [];\n    var result = [];\n    for (i = 0; i < n; i += 1) {\n      shuffle.push([Math.floor(Math.random() * n), i]);\n    }\n\n    shuffle.sort(function (a,b) {\n      return  a[0] - b[0];\n    });\n\n    for (i = 0; i < n; i += 1) {\n      result.push(colors[shuffle[i][1]]);\n    }\n\n    return result;\n  };\n })(exports);\n","import { unique_colors } from 'unique-colors'\n\nclass Obstacle {\n  constructor(container, canvas, world, index, onFinish) {\n    this.container = container\n    this.canvas = canvas\n    this.world = world\n    this.index = index\n\n    this.x = 0\n    this.y = 0\n    this.rate = ((.5 - (index * .025)) * 1000)\n    this.fill = this.getRandomFill()\n    this.missingX = this.getRandomMissingX()\n\n    this.finished = false\n    this.interval = null\n\n    this.onFinish = onFinish\n  }\n\n  getRandomFill() {\n    return unique_colors(1)\n  }\n\n  getRandomMissingX() {\n    if (!this.world.columns) {\n      return -1\n    }\n\n    return Math.floor(Math.random() * this.world.columns)\n  }\n\n  resize() {\n    if (this.missingX < 0) {\n      this.missingX = this.getRandomMissingX()\n    }\n  }\n\n  fall() {\n    if (this.y < (this.world.rows - this.index)) {\n      this.y += 1\n\n      if (this.y >= (this.world.rows - this.index)) {\n        window.clearInterval(this.interval)\n        this.interval = null\n        this.finish()\n      }\n    }\n  }\n\n  complete() {\n    this.missingX = -1\n  }\n\n  finish() {\n    this.finished = true\n    this.onFinish()\n  }\n\n  loop() {\n    this.interval = window.setInterval(this.fall.bind(this), this.rate)\n  }\n\n  render() {\n    const { columns, tileSize } = this.world\n\n    for (let i = 0; i < this.world.columns; i++) {\n      if (i === this.missingX) {\n        continue\n      }\n\n      const x = (i * tileSize)\n      const y = (this.y * tileSize)\n\n      this.canvas.beginPath()\n      this.canvas.fillStyle = this.fill\n      this.canvas.strokeStyle = '#fafafa'\n      this.canvas.rect(x, y, tileSize, tileSize)\n      this.canvas.fill()\n      this.canvas.stroke()\n    }\n\n    if (this.world.columns > 0 && !this.interval) {\n      this.loop()\n    }\n  }\n}\n\nexport default Obstacle\n","class Player {\n  constructor(container, canvas, world) {\n    this.container = container\n    this.canvas = canvas\n    this.world = world\n\n    this.size = -1\n    this.fill = '#333333'\n    this.x = this.getStartingX()\n    this.y = this.getStartingY()\n\n    this.resize()\n  }\n\n  resize() {\n    if ((this.size < 0) && this.world.tileSize) {\n      this.size = this.world.tileSize\n    }\n\n    if ((this.x < 0 || this.y < 0)) {\n      this.x = this.getStartingX()\n      this.y = this.getStartingY()\n    }\n  }\n\n  getStartingX() {\n    if (!this.world.columns) {\n      return -1\n    }\n\n    return Math.floor(this.world.columns / 2)\n  }\n\n  getStartingY() {\n    if (!this.world.rows) {\n      return -1\n    }\n\n    return Math.floor(this.world.rows / 2)\n  }\n\n  moveLeft() {\n    this.x--\n  }\n\n  moveRight() {\n    this.x++\n  }\n\n  paint(color = '#333333') {\n    this.fill = color\n  }\n\n  render() {\n    this.canvas.beginPath()\n    this.canvas.fillStyle = this.fill\n    this.canvas.strokeStyle = '#fafafa'\n    this.canvas.rect((this.x * this.size), (this.y * this.size), this.size, this.size)\n    this.canvas.fill()\n    this.canvas.stroke()\n  }\n}\n\nexport default Player\n","export { default as Game } from './Game'\nexport { default as World } from './World'\nexport { default as Obstacle } from './Obstacle'\nexport { default as Player } from './Player'\n","import 'normalize.css'\nimport domready from 'domready'\nimport { Game } from './components'\n\nconst init = () => {\n  return new Game(document.getElementById('thru'))\n}\n\ndomready(init)\n"]}